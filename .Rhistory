size = 7,
stroke = 2,
color = "purple") +
labs(x = "Total Points",
title = "Season Points vs Season Attendance") +
geom_hline(yintercept = mean(Mens$Attendance), color = "blue",
linetype = "dashed") +
geom_hline(yintercept = mean(Womens$Attendance), color = "hotpink",
linetype = "dashed") +
geom_vline(xintercept = mean(Mens$Total_Points), color = "blue",
linetype = "dashed") +
geom_vline(xintercept = mean(Womens$Total_Points), color = "hotpink",
linetype = "dashed") +
theme(legend.position = c(0.75, 0.75))
AP
# Plotting Just Points Graph
Points_Graph <- ggplot(data = Attendance_Points, aes(x = Year, y = Total_Points)) +
geom_line(aes(color = Team), linewidth = 1) +
geom_point(aes(color = Team), size = 2.5) +
scale_color_manual(breaks = c("Mens", "Womens"),
values = c("blue", "hotpink")) +
labs(y = "Total Points",
title = "Season Points for each Year") +
geom_hline(yintercept = mean(Mens$Total_Points), color = "blue",
linetype = "dashed", linewidth = 0.75) +
geom_hline(yintercept = mean(Womens$Total_Points), color = "hotpink",
linetype = "dashed", linewidth = 0.75) +
geom_vline(xintercept = 2020, color = "blue",
linetype = "dashed", linewidth = 0.75)
theme(legend.position = c(0.9, 0.2),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Points_Graph
tiff("docs/PvAGraph.png")
{
library(tidyverse)
library(dplyr)
library(ggplot2)
#' Question 1: Do the players score more points based on the attendance
#' at the game?
#'
# Grabbing necessary data
Attendance_Points <- Team_Stats %>%
select(c("Year", "Team", "Total.Points", "Total"))
# Changing Col. Names
names(Attendance_Points)[names(Attendance_Points) == "Total"] <- "Attendance"
names(Attendance_Points)[names(Attendance_Points) == "Total.Points"] <- "Total_Points"
# Removing 0 attendance (COVID)
Attendance_Points <- Attendance_Points %>%
filter(Attendance != 0)
# Getting means for each team
Mens <- Attendance_Points %>%
filter(Team == "Mens")
Womens <- Attendance_Points %>%
filter(Team == "Womens")
# Graph
ggplot(data = Attendance_Points, aes(x = Year, y = Total_Points)) +
geom_line(aes(color = Team), linewidth = 1) +
geom_point(aes(color = Team), size = 2.5) +
scale_color_manual(breaks = c("Mens", "Womens"),
values = c("blue", "hotpink")) +
labs(y = "Total Points",
title = "Season Points for each Year") +
geom_hline(yintercept = mean(Mens$Total_Points), color = "blue",
linetype = "dashed") +
geom_hline(yintercept = mean(Womens$Total_Points), color = "hotpink",
linetype = "dashed") +
theme(legend.position = c(0.9, 0.2),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
}
dev.off()
# Plotting Just Points Graph
Points_Graph <- ggplot(data = Attendance_Points, aes(x = Year, y = Total_Points)) +
geom_line(aes(color = Team), linewidth = 1) +
geom_point(aes(color = Team), size = 2.5) +
scale_color_manual(breaks = c("Mens", "Womens"),
values = c("blue", "hotpink")) +
labs(y = "Total Points",
title = "Season Points for each Year") +
geom_hline(yintercept = mean(Mens$Total_Points), color = "blue",
linetype = "dashed", linewidth = 0.75) +
geom_hline(yintercept = mean(Womens$Total_Points), color = "hotpink",
linetype = "dashed", linewidth = 0.75) +
geom_vline(xintercept = 2020, color = "blue",
linetype = "dashed", linewidth = 0.75)
theme(legend.position = c(0.9, 0.2),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
# Plotting Just Points Graph
Points_Graph <- ggplot(data = Attendance_Points, aes(x = Year, y = Total_Points)) +
geom_line(aes(color = Team), linewidth = 1) +
geom_point(aes(color = Team), size = 2.5) +
scale_color_manual(breaks = c("Mens", "Womens"),
values = c("blue", "hotpink")) +
labs(y = "Total Points",
title = "Season Points for each Year") +
geom_hline(yintercept = mean(Mens$Total_Points), color = "blue",
linetype = "dashed", linewidth = 0.75) +
geom_hline(yintercept = mean(Womens$Total_Points), color = "hotpink",
linetype = "dashed", linewidth = 0.75) +
geom_vline(xintercept = 2020, color = "blue",
linetype = "dashed", linewidth = 0.75) +
theme(legend.position = c(0.9, 0.2),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Points_Graph
# Plotting Just Points Graph
Points_Graph <- ggplot(data = Attendance_Points, aes(x = Year, y = Total_Points)) +
geom_line(aes(color = Team), linewidth = 1) +
geom_point(aes(color = Team), size = 2.5) +
scale_color_manual(breaks = c("Mens", "Womens"),
values = c("blue", "hotpink")) +
labs(y = "Total Points",
title = "Season Points for each Year") +
geom_hline(yintercept = mean(Mens$Total_Points), color = "blue",
linetype = "dashed", linewidth = 0.75) +
geom_hline(yintercept = mean(Womens$Total_Points), color = "hotpink",
linetype = "dashed", linewidth = 0.75) +
geom_vline(xintercept = 2020, color = "blue",
linetype = "dashed", linewidth = 0.75) +
annotate("text", x = 2020, y = 2400, label = "New Coach") +
theme(legend.position = c(0.9, 0.2),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Points_Graph
# Plotting Just Points Graph
Points_Graph <- ggplot(data = Attendance_Points, aes(x = Year, y = Total_Points)) +
geom_line(aes(color = Team), linewidth = 1) +
geom_point(aes(color = Team), size = 2.5) +
scale_color_manual(breaks = c("Mens", "Womens"),
values = c("blue", "hotpink")) +
labs(y = "Total Points",
title = "Season Points for each Year") +
geom_hline(yintercept = mean(Mens$Total_Points), color = "blue",
linetype = "dashed", linewidth = 0.75) +
geom_hline(yintercept = mean(Womens$Total_Points), color = "hotpink",
linetype = "dashed", linewidth = 0.75) +
geom_vline(xintercept = 2020, color = "blue",
linetype = "dashed", linewidth = 0.75) +
annotate("text", x = 2020, y = 2400, label = "New Coach", angle = 90) +
theme(legend.position = c(0.9, 0.2),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Points_Graph
# Plotting Just Points Graph
Points_Graph <- ggplot(data = Attendance_Points, aes(x = Year, y = Total_Points)) +
geom_line(aes(color = Team), linewidth = 1) +
geom_point(aes(color = Team), size = 2.5) +
scale_color_manual(breaks = c("Mens", "Womens"),
values = c("blue", "hotpink")) +
labs(y = "Total Points",
title = "Season Points for each Year") +
geom_hline(yintercept = mean(Mens$Total_Points), color = "blue",
linetype = "dashed", linewidth = 0.75) +
geom_hline(yintercept = mean(Womens$Total_Points), color = "hotpink",
linetype = "dashed", linewidth = 0.75) +
geom_vline(xintercept = 2020, color = "blue",
linetype = "dashed", linewidth = 0.75) +
annotate("text", x = 2019.5, y = 2400, label = "New Coach", angle = 90) +
theme(legend.position = c(0.9, 0.2),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Points_Graph
# Plotting Just Points Graph
Points_Graph <- ggplot(data = Attendance_Points, aes(x = Year, y = Total_Points)) +
geom_line(aes(color = Team), linewidth = 1) +
geom_point(aes(color = Team), size = 2.5) +
scale_color_manual(breaks = c("Mens", "Womens"),
values = c("blue", "hotpink")) +
labs(y = "Total Points",
title = "Season Points for each Year") +
geom_hline(yintercept = mean(Mens$Total_Points), color = "blue",
linetype = "dashed", linewidth = 0.75) +
geom_hline(yintercept = mean(Womens$Total_Points), color = "hotpink",
linetype = "dashed", linewidth = 0.75) +
geom_vline(xintercept = 2020, color = "blue",
linetype = "dashed", linewidth = 0.75) +
annotate("text", x = 2019.5, y = 2410, label = "New Coach", angle = 90) +
theme(legend.position = c(0.9, 0.2),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Points_Graph
tiff("docs/PvAGraph.png")
{
library(tidyverse)
library(dplyr)
library(ggplot2)
#' Question 1: Do the players score more points based on the attendance
#' at the game?
#'
# Grabbing necessary data
Attendance_Points <- Team_Stats %>%
select(c("Year", "Team", "Total.Points", "Total"))
# Changing Col. Names
names(Attendance_Points)[names(Attendance_Points) == "Total"] <- "Attendance"
names(Attendance_Points)[names(Attendance_Points) == "Total.Points"] <- "Total_Points"
# Removing 0 attendance (COVID)
Attendance_Points <- Attendance_Points %>%
filter(Attendance != 0)
# Getting means for each team
Mens <- Attendance_Points %>%
filter(Team == "Mens")
Womens <- Attendance_Points %>%
filter(Team == "Womens")
# Graph
ggplot(data = Attendance_Points, aes(x = Year, y = Total_Points)) +
geom_line(aes(color = Team), linewidth = 1) +
geom_point(aes(color = Team), size = 2.5) +
scale_color_manual(breaks = c("Mens", "Womens"),
values = c("blue", "hotpink")) +
labs(y = "Total Points",
title = "Season Points for each Year") +
geom_hline(yintercept = mean(Mens$Total_Points), color = "blue",
linetype = "dashed", linewidth = 0.75) +
geom_hline(yintercept = mean(Womens$Total_Points), color = "hotpink",
linetype = "dashed", linewidth = 0.75) +
geom_vline(xintercept = 2020, color = "blue",
linetype = "dashed", linewidth = 0.75) +
annotate("text", x = 2019.5, y = 2410, label = "New Coach", angle = 90) +
theme(legend.position = c(0.9, 0.2),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
}
dev.off()
library(tidyverse)
library(dplyr)
library(ggplot2)
library(reshape2)
#' Question 2: Which team, on average, has the better players?
#' t-test
#' boxplots
# Separating Data
Mens_Players <- Players %>%
filter(Team == "Mens") %>%
select(FG:PTS)
library(tidyverse)
# Combining the Coaches and Basketball DFs
Players <- read.csv("data/Players.csv")
Games <- read.csv("data/Games.csv")
Coaches <- read.csv("data/Coaches.csv")
Basketball <- read.csv("data/NAUBasketball.csv")
Team_Stats <- Basketball %>%
left_join(Coaches, by = c("Year" = "Year", "Team" = "Team")) %>%
select(-c("X.y", "X.x"))
Players <- Players %>%
rename(
FG = FG.,
X3PT = X3PT.,
FT = FT.,
ORB = OREB,
DRB = DREB,
TRB = REB
)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(reshape2)
#' Question 2: Which team, on average, has the better players?
#' t-test
#' boxplots
# Separating Data
Mens_Players <- Players %>%
filter(Team == "Mens") %>%
select(FG:PTS)
Womens_Players <- Players %>%
filter(Team == "Womens") %>%
select(FG:PTS)
# Making Average Dataframes
# Mens
columns <- colnames(Mens_Players)
means <- colMeans(Mens_Players)
Mens_Average <- data.frame(
Columns = columns,
Mens = means
)
# Womens
columns <- colnames(Womens_Players)
means <- colMeans(Womens_Players)
Womens_Average <- data.frame(
Columns = columns,
Womens = means
)
# Combining
Players_Averages <- melt(merge(Mens_Average, Womens_Average, by = "Columns"))
names(Players_Averages)[names(Players_Averages) == "variable"] <- "Team"
names(Players_Averages)[names(Players_Averages) == "value"] <- "Average"
# Graph
PAvg <- ggplot(data=Players_Averages, aes(x = reorder(Columns, -Average), y = Average)) +
geom_bar(aes(fill = Team), stat = "identity", position = "dodge") +
scale_fill_manual(values = c("blue", "hotpink")) +
scale_y_sqrt() +
labs(title = "Players Averages",
x = "Columns") +
theme(legend.position = c(0.9, 0.75),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25) )
#PAvg
# Boxplot
# Getting necessary data
Player_Stats <- melt(Players, id.vars = "Team",
measure.vars = 7:16 )
# Graph
tiff("docs/PAGraph.png")
{
library(ggplot2)
library(reshape2)
Player_Stats <- melt(Players, id.vars = "Team",
measure.vars = 7:16 )
ggplot(data=Player_Stats) +
geom_boxplot(aes(x = reorder(variable, -value), y = value, color = Team),
linewidth = 2, fatten = 1) +
scale_color_manual(values = c("blue", "hotpink")) +
scale_y_sqrt() +
labs(title = "Players Statistics",
x = "Columns") +
theme(legend.position = c(0.9, 0.75),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25) )
}
dev.off()
Box <- ggplot(data=Player_Stats) +
geom_boxplot(aes(x = reorder(variable, -value), y = value, color = Team)) +
scale_color_manual(values = c("blue", "hotpink")) +
scale_y_sqrt() +
labs(title = "Players Statistics",
x = "Columns") +
theme(legend.position = c(0.9, 0.75),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Box
Box <- ggplot(data=Player_Stats) +
geom_boxplot(aes(x = reorder(variable, -value), y = value, color = Team),
linewidth = 2, fatten = 1) +
scale_color_manual(values = c("blue", "hotpink")) +
scale_y_sqrt() +
labs(title = "Players Statistics",
x = "Columns") +
theme(legend.position = c(0.9, 0.75),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Box
Box <- ggplot(data=Player_Stats) +
geom_boxplot(aes(x = reorder(variable, -value), y = value, color = Team),
linewidth = 1.5, fatten = 1) +
scale_color_manual(values = c("blue", "hotpink")) +
scale_y_sqrt() +
labs(title = "Players Statistics",
x = "Columns") +
theme(legend.position = c(0.9, 0.75),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Box
Box <- ggplot(data=Player_Stats) +
geom_boxplot(aes(x = reorder(variable, -value), y = value, color = Team),
linewidth = 1.5) +
scale_color_manual(values = c("blue", "hotpink")) +
scale_y_sqrt() +
labs(title = "Players Statistics",
x = "Columns") +
theme(legend.position = c(0.9, 0.75),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Box
Box <- ggplot(data=Player_Stats) +
geom_boxplot(aes(x = reorder(variable, -value), y = value, color = Team),
linewidth = 1, fatten = 0.5) +
scale_color_manual(values = c("blue", "hotpink")) +
scale_y_sqrt() +
labs(title = "Players Statistics",
x = "Columns") +
theme(legend.position = c(0.9, 0.75),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Box
Box <- ggplot(data=Player_Stats) +
geom_boxplot(aes(x = reorder(variable, -value), y = value, color = Team),
linewidth = 1, fatten = 0.75) +
scale_color_manual(values = c("blue", "hotpink")) +
scale_y_sqrt() +
labs(title = "Players Statistics",
x = "Columns") +
theme(legend.position = c(0.9, 0.75),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25))
Box
# Graph
tiff("docs/PAGraph.png")
{
library(ggplot2)
library(reshape2)
Player_Stats <- melt(Players, id.vars = "Team",
measure.vars = 7:16 )
ggplot(data=Player_Stats) +
geom_boxplot(aes(x = reorder(variable, -value), y = value, color = Team),
linewidth = 1, fatten = 0.75) +
scale_color_manual(values = c("blue", "hotpink")) +
scale_y_sqrt() +
labs(title = "Players Statistics",
x = "Columns") +
theme(legend.position = c(0.9, 0.75),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_text(face = "bold"),
legend.background = element_rect(fill = "transparent"),
legend.key = element_rect(fill = "transparent"),
panel.background = element_rect(fill= "lightblue", color = "black",
linewidth = 2),
panel.grid.major = element_line(color = "gray10", linewidth = 0.25),
panel.grid.minor = element_line(color = "gray50", linewidth = 0.25) )
}
dev.off()
